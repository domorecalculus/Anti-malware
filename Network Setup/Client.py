import socket
import sys
import re
import subprocess
import time

#HOST, PORT = "localhost", 9999
#data = " ".join(sys.argv[1:])

# Create a socket (SOCK_STREAM means a TCP socket)
#sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

#try:
    # Connect to server and send data
#    sock.connect((HOST, PORT))
#    sock.sendall(bytes(data + "\n", "utf-8"))

    # Receive data from the server and shut down
#    received = str(sock.recv(1024), "utf-8")
#finally:
#    sock.close()

#print("Sent:     {}".format(data))
#print("Received: {}".format(received))

def try_connecting():
    #Using normal socket connect feature

    #PORT = 9999
    #connected = False

    #arp = subprocess.check_output(['arp', '-a'])
    #lines = arp.decode('utf8').split("\r\n")

    #ips = []

    #for x in lines[3:(len(lines) - 1)]:
    #    ips.append(re.sub('\s', '', x[1:20]))

    #sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    #for x in ips:
    #    if not connected:
    #        try:
    #            sock.connect((x, PORT))
    #            connected = True
    #            print("connected")
    #        except:
    #            print("Tried " + x)

    #return connected
    start = time.time()
    while time.time() - start < 10000:
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.bind(('',50000))
        m = s.recvfrom(1024)
        print('Data: ' + m[0].decode('utf-8'))
        if(m[0].decode('utf-8') == 'scan'):
            return True
    return False