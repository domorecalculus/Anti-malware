# Send UDP broadcast packets

MYPORT = 50000

import sys, time
import socket


connected = []


def parse_message(data):
    message = data[0].decode('utf-8')
    address = data[0].decode('utf-8')

    if message == 'connected':
        connected.append(address)
        send_message("data", address)
    elif message.split(' ')[0] == 'Threat:':
        for x in connected:
            if x != address:
                send_message(message, x)
    elif message == 'disconnect':
        connected.remove(address)
        for x in connected:
            send_message('disconnected' + address, address)
    elif message.split(' ')[0] == 'disconnected':
        return
    else:
        return


def send_message(data, address):
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s.sendto(data, (address, 0))


class broadcast_server:

    def start(self):
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.bind(('', 0))
        s.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1)

    def run(self):
        data = bytes("scan".encode(encoding='utf-8'))
        s.sendto(data, ('255.255.255.255', MYPORT))
        print("Sent Packet")
        m = s.recvfrom(1024)
        parse_message(m)


class broadcast_client:
    s = 0

    def start(self):
        global s
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.bind(('', 0))
        s.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1)

    def run(self):
        m = s.recvfrom(1024)
        parse_message(m)

