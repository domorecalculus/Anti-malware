import gi
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk

import threading

from Client import try_connecting
from Server import MyTCPHandler
from Server import server
from Server import ServerThread

server_thread = 0

class SEAM(Gtk.Window):

    def __init__(self):
        Gtk.Window.__init__(self, title="SEAM")
        Gtk.Window.set_default_geometry(self, 1400, 800)

        grid = Gtk.Grid()
        self.add(grid)

        self.button1 = Gtk.Button(label="Click1")
        self.button1.connect("clicked", self.button_click)
        self.button1.set_size_request(1400, 100)
        grid.attach(self.button1, 0, 0, 6, 1)

        self.button2 = Gtk.Button(label="Click2")
        self.button2.connect("clicked", self.button_click)
        self.button2.set_size_request(250, 700)
        grid.attach(self.button2, 0, 1, 1, 1)

        self.button3 = Gtk.Button(label="Connect")
        self.button3.connect("clicked", self.connect_to_server)
        self.button3.set_size_request(1150, 700)
        grid.attach(self.button3, 1, 1, 5, 1)

    def button_click(self, widget):
        print("You clicked " + widget.get_properties("label")[0])

    def connect_to_server(self, widget):
        if not try_connecting():
            print("creating server...")
            HOST, PORT = "localhost", 9999

            network_server = server((HOST, PORT), MyTCPHandler)
            #network_server.serve_forever(poll_interval=500)
            global server_thread
            server_thread = ServerThread(network_server)
            server_thread.setDaemon(True)
            server_thread.start()

def quit(args, kwargs):
    Gtk.main_quit()
    #server_thread.join()

window = SEAM()
window.connect("delete-event", quit)
window.show_all()
Gtk.main()
