import gi
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk
from gi.repository import Gdk

from ThreatTracker import threatTracker
from Client import try_connecting
from Server import MyTCPHandler
from Server import server
from Server import ServerThread

connected = ['192.168.1.1', '192.168.1.2']
server_thread = 0

class SEAM(Gtk.Window):

    def __init__(self):
        Gtk.Window.__init__(self, title="SEAM")
        Gtk.Window.set_default_geometry(self, 1400, 800)

        self.grid = Gtk.Grid()
        self.add(self.grid)

        #self.button1 = Gtk.Button(label="Click1")
        #self.button1.connect("clicked", self.button_click)
        #self.button1.set_size_request(1400, 100)
        #self.grid.attach(self.button1, 0, 0, 6, 1)

        listbox = Gtk.ListBox()
        listbox.set_selection_mode(Gtk.SelectionMode.SINGLE)

        row1 = Gtk.ListBoxRow()
        row1.set_size_request(1400, 100)
        label = Gtk.Label(connected[0])
        row1.add(label)
        listbox.add(row1)
        #listbox.select_row(row1)

        self.grid.attach(listbox, 0, 0, 6, 1)

    def main_pane(self):
        listbox = Gtk.ListBox()
        listbox.set_selection_mode(Gtk.SelectionMode.NONE)

        for x in tt.threatList:
            row = Gtk.ListBoxRow()
            grid = Gtk.Grid()
            row.add(grid)

            fileName = Gtk.Label(x[1])
            fileLoc = Gtk.Label(x[0])
            nothing = Gtk.Button(label="nothing")

            grid.attach(fileName, 0, 0, 1, 1)
            grid.attach(fileLoc, 0, 1, 1, 1)
            listbox.add(row)

        listbox.set_size_request(1150, 700)
        self.grid.attach(listbox, 1, 1, 5, 1)

    def side_pane(self):
        listbox = Gtk.ListBox()
        listbox.set_selection_mode(Gtk.SelectionMode.SINGLE)

        row1 = Gtk.ListBoxRow()
        row1.set_size_request(250, 100)
        label = Gtk.Label(connected[0])
        row1.add(label)
        listbox.add(row1)
        listbox.select_row(row1)

        for x in connected[1:]:
            row1 = Gtk.ListBoxRow()
            row1.set_size_request(250, 100)
            label = Gtk.Label(x)
            row1.add(label)
            listbox.add(row1)

        listbox.set_size_request(250, 700)
        self.grid.attach(listbox, 0, 1, 1, 1)

    def button_click(self, widget):
        print("You clicked " + widget.get_properties("label")[0])

    def connect_to_server(self):
        if not try_connecting():
            print("creating server...")
            HOST, PORT = "localhost", 9999

            network_server = server((HOST, PORT), MyTCPHandler)
            #network_server.serve_forever(poll_interval=500)
            global server_thread
            server_thread = ServerThread(network_server)
            server_thread.setDaemon(True)
            server_thread.start()


css = Gtk.CssProvider()
css.load_from_path('styles.css')
screen = Gdk.Screen.get_default()
styleContext = Gtk.StyleContext()
styleContext.add_provider_for_screen(screen, css, Gtk.STYLE_PROVIDER_PRIORITY_USER)

window = SEAM()

window.connect_to_server()
tt = threatTracker()
print(tt.threatList)
window.side_pane()
window.main_pane()

window.connect("delete-event", Gtk.main_quit)
window.show_all()
Gtk.main()
